name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger this workflow on push to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest  # Specify the runner type

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # specify your AWS region

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0  # Specify the Terraform version you need

      # Zip Lambda Function Code
      - name: Zip Lambda Deployment Package
        run: |
          # Clean the folder if needed (optional)
          rm -rf lambda_function.zip
          
          # Assuming lambda function is in lambda_function.py (adjust for your use case)
          zip -r lambda_function.zip lambda_function.py $(ls -d */)  # Include Lambda function and any dependencies

      - name: Terraform Init
        run: terraform init  # Initialize Terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan  # Create a plan file

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan  # Apply the plan to create or modify AWS resources

     
